{"ast":null,"code":"var _jsxFileName = \"/Users/mazinabed/Desktop/enki/src/components/profileCard/ProfileCard.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport NavProfileHome from '../NavProfileHome/index';\nimport MemberSectionOnMHP from '../MemberSectionOnMHP.js';\nimport FriendCard from \"../../components/profileCard/FriendCard\";\nimport Wrapper from \"../../components/profileCard/Wrapper\";\nimport Title from \"../../components/profileCard/Title\";\nimport friends from \"../../../friends.json\";\n\nclass ProfileCard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      friends\n    });\n\n    _defineProperty(this, \"removeFriend\", id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const friends = this.state.friends.filter(friend => friend.id !== id); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        friends\n      });\n    });\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return __jsx(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, __jsx(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"Friends List\"), this.state(friend => __jsx(FriendCard, {\n      removeFriend: this.removeFriend,\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      occupation: friend.occupation,\n      location: friend.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default ProfileCard;","map":{"version":3,"sources":["/Users/mazinabed/Desktop/enki/src/components/profileCard/ProfileCard.js"],"names":["React","Component","NavProfileHome","MemberSectionOnMHP","FriendCard","Wrapper","Title","friends","ProfileCard","id","state","filter","friend","setState","render","removeFriend","name","image","occupation","location"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,kBAAP,MAA+B,0BAA/B;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAE1B;AACNM,MAAAA;AADM,KAF0B;;AAAA,0CAMnBE,EAAE,IAAI;AACnB;AACA,YAAMF,OAAO,GAAG,KAAKG,KAAL,CAAWH,OAAX,CAAmBI,MAAnB,CAA0BC,MAAM,IAAIA,MAAM,CAACH,EAAP,KAAcA,EAAlD,CAAhB,CAFmB,CAGnB;;AACA,WAAKI,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KAXiC;AAAA;;AAalC;AACAO,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEG,KAAKJ,KAAL,CAAWE,MAAM,IAChB,MAAC,UAAD;AACE,MAAA,YAAY,EAAE,KAAKG,YADrB;AAEE,MAAA,EAAE,EAAEH,MAAM,CAACH,EAFb;AAGE,MAAA,GAAG,EAAEG,MAAM,CAACH,EAHd;AAIE,MAAA,IAAI,EAAEG,MAAM,CAACI,IAJf;AAKE,MAAA,KAAK,EAAEJ,MAAM,CAACK,KALhB;AAME,MAAA,UAAU,EAAEL,MAAM,CAACM,UANrB;AAOE,MAAA,QAAQ,EAAEN,MAAM,CAACO,QAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CADF;AAgBD;;AA/BiC;;AAkCpC,eAAeX,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport NavProfileHome from '../NavProfileHome/index'\nimport MemberSectionOnMHP from '../MemberSectionOnMHP.js'\nimport FriendCard from \"../../components/profileCard/FriendCard\";\nimport Wrapper from \"../../components/profileCard/Wrapper\";\nimport Title from \"../../components/profileCard/Title\";\nimport friends from \"../../../friends.json\";\n\nclass ProfileCard extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends\n  };\n\n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n        {this.state(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default ProfileCard;\n"]},"metadata":{},"sourceType":"module"}